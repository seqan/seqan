# SPDX-FileCopyrightText: 2006-2025 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2025 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Windows

on:
  push:
    branches:
      - 'main'
  pull_request:
  workflow_dispatch:

concurrency:
  group: windows-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name != 'push' }}

env:
  TZ: Europe/Berlin

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: windows-2022
    timeout-minutes: 180
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Visual Studio 17 2022"
            vsversion : 2022
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          vsversion: ${{ matrix.vsversion }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.x

      - name: Install Python dependencies
        run: |
          pip install setuptools wheel
          pip install -r manual/requirements.txt

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ""
          auto-activate-base: true
          auto-update-conda: false

      - name: Install conda dependencies
        run: |
          conda install -c conda-forge boost-cpp bzip2 ccache libxml2 zlib
          $CONDA_BASE = conda info --base
          "$CONDA_BASE\Library\include" | Out-File -FilePath $env:GITHUB_PATH -Append
          "$CONDA_BASE\Library\lib" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Load ccache
        uses: actions/cache@v4
        with:
          path: .ccache
          key: ccache-${{ runner.os }}-${{ github.workflow }}-${{ github.ref }}-${{ github.run_id }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ github.workflow }}-${{ github.ref }}
            ccache-${{ runner.os }}-${{ github.workflow }}

      - name: Configure tests
        run: |
          New-Item -Name "build" -ItemType "directory" -Force
          cd build
          cmake .. -G "${{ matrix.name }}" `
                   -C ../util/cmake/SeqAnMSVCccache.cmake `
                   -DCMAKE_BUILD_TYPE=Release `
                   -DCMAKE_CXX_FLAGS="/std:c++latest /EHsc /W2 /wd4244 /wd4146" `
                   -DSEQAN_DISABLE_VERSION_CHECK=ON `
                   -DPython3_ROOT_DIR=$env:pythonLocation `
                   -DPython3_EXECUTABLE=$env:pythonLocation/bin/python3

      - name: Build tests
        working-directory: build
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPILERCHECK: content
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 12
          CCACHE_MAXSIZE: 200M
        run: |
          ccache -z
          cmake --build . --config Release --parallel 4 -- /p:ContinueOnError=ErrorAndContinue
          ccache -svvx

      - name: Run tests
        working-directory: build
        continue-on-error: true
        id: test
        run: ctest . -j4 -C Release --output-on-failure --timeout 240 -E "app_test_yara"

      - name: Rerun failed tests
        if: steps.test.outcome == 'failure'
        working-directory: build
        run: ctest . -j2 -C Release --output-on-failure --timeout 240 --rerun-failed
