/*!
 * @page DemoIndexCountChildren Index Count Children
 * @brief Example for using a countChildren and countOccurrences for indices.
 *
 * This example shows how to iterate over a suffix tree and print the number of children and the number of occurrences
 * of the node representatitves.
 *
 * @include demos/dox/index/counting.cpp
 *
 * The only maximal matches that occur in all 3 sequences are "SeqAn" and "sequence". They occur exactly once and thus
 * are maximal unique matches.

 *
 * @code{.console}
 * Representative has 17 children and 91 occurrences 
 * Representative has 5 children and 16 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative a has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative c has 3 children  and 12 occurrences 
 * The node is a leaf 
 * Representative chuck has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative ck has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative d has 3 children  and 7 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative huck has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative k has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative o has 4 children  and 13 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * Representative uck has 3 children  and 5 occurrences 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf 
 * The node is a leaf
 * The node is a leaf
* @endcode
 */


